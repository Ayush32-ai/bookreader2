{"version":3,"file":"plugins/plugin.archive_analytics.js","mappings":"06BAMO,IAAMA,EAAgB,WAW3B,O,EAPA,SAAAA,EAAYC,I,4FAAIC,CAAA,KAAAF,GAEdG,KAAKF,GAAKA,EAEVE,KAAKC,OACP,G,EAEA,EAAAC,IAAA,QAAAC,MAIA,SAAMF,GACJD,KAAKC,QAAUG,OAAOC,OAAO,CAAC,EAAGL,KAAKC,QAASA,EACjD,GAEA,CAAAC,IAAA,OAAAC,MACA,WAAQ,GAER,CAAAD,IAAA,0BAAAC,MAKA,SAAwBG,GACxB,GAEA,CAAAJ,IAAA,0BAAAC,MACA,WAA2B,GAE3B,CAAAD,IAAA,eAAAC,MAGA,SAAaI,GAAU,M,6EAAC,CApCG,E,qtDCH7B,IAAMC,EAAmEC,OAAOD,WAGnEE,EAAsB,SAAAC,GAAA,SAAAD,IAAA,IAAAE,G,4FAAAb,CAAA,KAAAW,GAAA,QAAAG,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAQb,OARaC,EAAAP,EAAAQ,EAAA,KAAAV,EAAA,GAAAW,OAAAL,IAAA,UACvB,CACRM,SAAS,EAETC,OAAO,IAGTJ,EAAAP,EAAA,gBACgB,MAAIA,CAAA,Q,qRAAAY,CAAAd,EAAAC,G,EAAAD,E,EAAA,EAAAR,IAAA,OAAAC,MAGpB,WAAO,IAAAsB,EAAA,KACDzB,KAAKC,QAAQqB,SACftB,KAAKF,GAAG4B,KAAKlB,EAAWmB,WAAWC,gBAAgB,kBAAMH,EAAKI,oBAAoB,GAEtF,GAEA,CAAA3B,IAAA,qBAAAC,MACA,WACE,GAAKM,OAAOqB,kBAAZ,CAIA,IAAMC,EAAe/B,KAAKgC,cAEpBC,EAASjC,KAAKF,GAAGoC,oBACjBC,EAAcnC,KAAKF,GAAGsC,mBAAmBH,GAE/C,GAAIF,GAAgBI,EAAa,KAAAE,EACzBC,EAAS,CACbC,WAAY,oBACZC,OAAQxC,KAAKF,GAAG2C,OAChBC,WAAYC,KAAKC,SAGnBN,QAAiB,EACjBA,QAAiB,GACjB,IACEA,EAAOO,QAAUpC,OAAOqC,IAAIC,SAASC,SAASC,MAAM,kBAChD,EACA,EACJX,EAAOY,SACJZ,EAAOO,SAAWpC,OAAOqC,IAAIC,SAASI,SAASF,MAAM,gBAClD,EACA,CACR,CAAE,MAAOG,GAAK,CAId3C,OAAOqB,kBAAkBuB,UAAUf,EAAQ,KAAM,uBAGjD,IAAMgB,EAAmD,QAA3BjB,EAAArC,KAAKF,GAAGG,QAAQsD,mBAAW,IAAAlB,GAA3BA,EAA6BmB,OACvD,CAAEA,OAAQxD,KAAKF,GAAGG,QAAQsD,YAAYC,QACtC,CAAC,EACL/C,OAAOqB,kBAAkB2B,WAAW,aAAc,kBAAmBhD,OAAOsC,SAASI,SAAUG,GAE/FtD,KAAKgC,cAAgBG,CACvB,CArCA,CAsCF,GAEA,CAAAjC,IAAA,YAAAC,MAOA,SAAUuD,EAAUC,EAAQxD,EAAOmD,GAC5BtD,KAAKC,QAAQqB,UAEdtB,KAAKC,QAAQsB,OACfqC,QAAQC,IAAI,4BAA6B/C,UAAWL,OAAOqB,mBAGxDrB,OAAOqB,oBAEZwB,EAAwBA,GAAyB,CAAC,EAC5B,iBAAVnD,IACVmD,EAAsBQ,GAAK3D,GAE7BM,OAAOqB,kBAAkB2B,WAAWC,EAAUC,EAAQ,KAAML,IAC9D,I,gFAAC,CAlFgC,CAASzD,EAAAA,GAqF5CW,SAAAA,EAAYuD,eAAe,mBAAoBrD,E","sources":["webpack://@internetarchive/bookreader/./src/BookReaderPlugin.js","webpack://@internetarchive/bookreader/./src/plugins/plugin.archive_analytics.js"],"sourcesContent":["// @ts-check\n/** @typedef {import(\"./BookReader.js\").default} BookReader */\n\n/**\n * @template TOptions\n */\nexport class BookReaderPlugin {\n  /**\n   * @param {BookReader} br\n   */\n  constructor(br) {\n    /** @type {BookReader} */\n    this.br = br;\n    /** @type {TOptions} */\n    this.options;\n  }\n\n  /**\n   * @abstract\n   * @param {TOptions} options\n   **/\n  setup(options) {\n    this.options = Object.assign({}, this.options, options);\n  }\n\n  /** @abstract */\n  init() {}\n\n  /**\n   * @abstract\n   * @protected\n   * @param {import (\"./BookReader/PageContainer.js\").PageContainer} pageContainer\n   */\n  _configurePageContainer(pageContainer) {\n  }\n\n  /** @abstract @protected */\n  _bindNavigationHandlers() {}\n\n  /**\n   * @param {JQuery<HTMLElement>} $navBar\n   */\n  extendNavBar($navBar) {}\n}\n","// @ts-check\nimport { BookReaderPlugin } from \"../BookReaderPlugin.js\";\n\nconst BookReader = /** @type {typeof import('../BookReader').default} */(window.BookReader);\n\n\nexport class ArchiveAnalyticsPlugin extends BookReaderPlugin {\n  options = {\n    enabled: true,\n    /** Provide a means of debugging, cause otherwise it's impossible to test locally */\n    debug: false,\n  }\n\n  /** @type {string} */\n  _prevFragment = null;\n\n  /** @override */\n  init() {\n    if (this.options.enabled) {\n      this.br.bind(BookReader.eventNames.fragmentChange, () => this.sendFragmentChange());\n    }\n  }\n\n  /** @private */\n  sendFragmentChange() {\n    if (!window.archive_analytics) {\n      return;\n    }\n\n    const prevFragment = this._prevFragment;\n\n    const params = this.br.paramsFromCurrent();\n    const newFragment = this.br.fragmentFromParams(params);\n\n    if (prevFragment != newFragment) {\n      const values = {\n        bookreader: \"user_changed_view\",\n        itemid: this.br.bookId,\n        cache_bust: Math.random(),\n      };\n      // EEK!  offsite embedding and /details/ page books look the same in analytics, otherwise!\n      values.offsite = 1;\n      values.details = 0;\n      try {\n        values.offsite = window.top.location.hostname.match(/\\.archive.org$/)\n          ? 0\n          : 1;\n        values.details =\n          !values.offsite && window.top.location.pathname.match(/^\\/details\\//)\n            ? 1\n            : 0;\n      } catch (e) { }\n      // avoids embed cross site exceptions -- but on (+) side, means it is and keeps marked offite!\n\n      // Send bookreader ping\n      window.archive_analytics.send_ping(values, null, \"augment_for_ao_site\");\n\n      // Also send tracking event ping\n      const additionalEventParams = this.br.options.lendingInfo?.loanId\n        ? { loanId: this.br.options.lendingInfo.loanId }\n        : {};\n      window.archive_analytics.send_event('BookReader', 'UserChangedView', window.location.pathname, additionalEventParams);\n\n      this._prevFragment = newFragment;\n    }\n  }\n\n  /**\n   * Sends a tracking \"Event\". See https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#events\n   * @param {string} category\n   * @param {string} action\n   * @param {number} [value] (must be an int)\n   * @param {Object} [additionalEventParams]\n   */\n  sendEvent(category, action, value, additionalEventParams) {\n    if (!this.options.enabled) return;\n\n    if (this.options.debug) {\n      console.log(\"archiveAnalyticsSendEvent\", arguments, window.archive_analytics);\n    }\n\n    if (!window.archive_analytics) return;\n\n    additionalEventParams = additionalEventParams || {};\n    if (typeof (value) == 'number') {\n      additionalEventParams.ev = value;\n    }\n    window.archive_analytics.send_event(category, action, null, additionalEventParams);\n  }\n}\n\nBookReader?.registerPlugin('archiveAnalytics', ArchiveAnalyticsPlugin);\n"],"names":["BookReaderPlugin","br","_classCallCheck","this","options","key","value","Object","assign","pageContainer","$navBar","BookReader","window","ArchiveAnalyticsPlugin","_BookReaderPlugin","_this","_len","arguments","length","args","Array","_key","_defineProperty","_callSuper","concat","enabled","debug","_inherits","_this2","bind","eventNames","fragmentChange","sendFragmentChange","archive_analytics","prevFragment","_prevFragment","params","paramsFromCurrent","newFragment","fragmentFromParams","_this$br$options$lend","values","bookreader","itemid","bookId","cache_bust","Math","random","offsite","top","location","hostname","match","details","pathname","e","send_ping","additionalEventParams","lendingInfo","loanId","send_event","category","action","console","log","ev","registerPlugin"],"sourceRoot":""}